{"version":3,"file":"static/js/315.cc7860d1.chunk.js","mappings":"uPAIA,MAcA,EAdoBA,IAAiC,IAAhC,MAAEC,EAAK,MAAEC,KAAUC,GAAOH,EAC7C,OACEI,EAAAA,EAAAA,KAACC,EAAAA,EAAS,CACRJ,MAAOA,EACPC,MAAOI,QAAQJ,GACfK,WAAYL,EACZ,gBAAAM,OAAeP,EAAK,mBAChBE,EACJM,WAAS,EACTC,OAAO,UACP,ECPAC,EAAmBC,EAAAA,GAAW,CAClCC,MAAOD,EAAAA,KAAaC,MAAM,wBAAwBC,SAAS,YAC3DC,SAAUH,EAAAA,KAAaI,IAAI,EAAG,4CAA4CF,SAAS,cAuErF,EApEiBG,KACf,MAAMC,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACbP,MAAO,GACPE,SAAU,IAEZJ,mBACAU,SAAUC,MAAOC,EAAMvB,KAAoC,IAAlC,cAAEwB,EAAa,UAAEC,GAAWzB,EACnD,MAAM0B,GAAOC,EAAAA,EAAAA,MACb,UACQC,EAAAA,EAAAA,IAA+BF,EAAMH,EAAOV,MAAOU,EAAOR,UAChEc,MAAM,+BACR,CAAE,MAAO3B,GACP,OAAQA,EAAM4B,MACZ,IAAK,4BACHL,EAAU,CAAEZ,MAAO,gEACnB,MACF,IAAK,qBACHY,EAAU,CAAEZ,MAAO,0BACnB,MACF,IAAK,qBACHY,EAAU,CAAEV,SAAU,8CACtB,MACF,QACEU,EAAU,CAAEM,OAAQ,iDAE1B,CAAC,QACCP,GAAc,EAChB,KAIJ,OACEpB,EAAAA,EAAAA,KAAC4B,EAAAA,EAAS,CAACC,UAAU,OAAOC,SAAS,KAAIC,UACvCC,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACC,GAAI,CAAEC,UAAW,EAAGC,QAAS,OAAQC,cAAe,SAAUC,WAAY,UAAWP,SAAA,EACxF/B,EAAAA,EAAAA,KAACuC,EAAAA,EAAU,CAACV,UAAU,KAAKW,QAAQ,KAAIT,SAAC,aACvCjB,EAAO2B,OAAOd,SAAU3B,EAAAA,EAAAA,KAACuC,EAAAA,EAAU,CAACG,MAAM,QAAOX,SAAEjB,EAAO2B,OAAOd,UAClEK,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACJ,UAAU,OAAOZ,SAAUH,EAAO6B,aAAcC,YAAU,EAACV,GAAI,CAAEW,GAAI,GAAId,SAAA,EAC5E/B,EAAAA,EAAAA,KAAC8C,EAAW,CACVjD,MAAM,QACNkD,KAAK,WACDjC,EAAOkC,cAAc,SACzBlD,MAAOgB,EAAOmC,QAAQxC,OAASK,EAAO2B,OAAOhC,MAAQK,EAAO2B,OAAOhC,MAAQ,GAC3E,aAAW,uBAEbT,EAAAA,EAAAA,KAAC8C,EAAW,CACVjD,MAAM,WACNkD,KAAK,cACDjC,EAAOkC,cAAc,YACzBlD,MAAOgB,EAAOmC,QAAQtC,UAAYG,EAAO2B,OAAO9B,SAAWG,EAAO2B,OAAO9B,SAAW,GACpF,aAAW,0BAEbX,EAAAA,EAAAA,KAACkD,EAAAA,EAAM,CACLH,KAAK,SACL1C,WAAS,EACTmC,QAAQ,YACRN,GAAI,CAAEW,GAAI,EAAGM,GAAI,GACjBC,SAAUtC,EAAOuC,aACjBC,SAAS,IAAGvB,SAEXjB,EAAOuC,cAAerD,EAAAA,EAAAA,KAACuD,EAAAA,EAAgB,CAACC,KAAM,KAAS,oBAIpD,C","sources":["components/CustomInput.js","pages/Register.js"],"sourcesContent":["// src/components/CustomInput.js\r\nimport React from 'react';\r\nimport { TextField } from '@mui/material';\r\n\r\nconst CustomInput = ({ label, error, ...props }) => {\r\n  return (\r\n    <TextField\r\n      label={label}\r\n      error={Boolean(error)}\r\n      helperText={error}\r\n      aria-label={`${label} input field`}\r\n      {...props}\r\n      fullWidth\r\n      margin=\"normal\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default CustomInput;","import React from 'react';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { getAuth, createUserWithEmailAndPassword } from 'firebase/auth';\r\nimport { Container, Typography, Box, Button, CircularProgress } from '@mui/material';\r\nimport CustomInput from '../components/CustomInput';\r\n\r\nconst validationSchema = Yup.object({\r\n  email: Yup.string().email('Invalid email format').required('Required'),\r\n  password: Yup.string().min(6, 'Password should be at least 6 characters').required('Required'),\r\n});\r\n\r\nconst Register = () => {\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      email: '',\r\n      password: '',\r\n    },\r\n    validationSchema,\r\n    onSubmit: async (values, { setSubmitting, setErrors }) => {\r\n      const auth = getAuth();\r\n      try {\r\n        await createUserWithEmailAndPassword(auth, values.email, values.password);\r\n        alert('User registered successfully');\r\n      } catch (error) {\r\n        switch (error.code) {\r\n          case 'auth/email-already-in-use':\r\n            setErrors({ email: 'This email is already in use. Please use a different email.' });\r\n            break;\r\n          case 'auth/invalid-email':\r\n            setErrors({ email: 'Invalid email format.' });\r\n            break;\r\n          case 'auth/weak-password':\r\n            setErrors({ password: 'Password should be at least 6 characters.' });\r\n            break;\r\n          default:\r\n            setErrors({ submit: 'An unknown error occurred. Please try again.' });\r\n        }\r\n      } finally {\r\n        setSubmitting(false);\r\n      }\r\n    },\r\n  });\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <Box sx={{ marginTop: 8, display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\r\n        <Typography component=\"h1\" variant=\"h5\">Register</Typography>\r\n        {formik.errors.submit && <Typography color=\"error\">{formik.errors.submit}</Typography>}\r\n        <Box component=\"form\" onSubmit={formik.handleSubmit} noValidate sx={{ mt: 1 }}>\r\n          <CustomInput\r\n            label=\"Email\"\r\n            type=\"email\"\r\n            {...formik.getFieldProps('email')}\r\n            error={formik.touched.email && formik.errors.email ? formik.errors.email : ''}\r\n            aria-label=\"Email input field\"\r\n          />\r\n          <CustomInput\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            {...formik.getFieldProps('password')}\r\n            error={formik.touched.password && formik.errors.password ? formik.errors.password : ''}\r\n            aria-label=\"Password input field\"\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            sx={{ mt: 3, mb: 2 }}\r\n            disabled={formik.isSubmitting}\r\n            tabIndex=\"0\"\r\n          >\r\n            {formik.isSubmitting ? <CircularProgress size={24} /> : 'Register'}\r\n          </Button>\r\n        </Box>\r\n      </Box>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Register;"],"names":["_ref","label","error","props","_jsx","TextField","Boolean","helperText","concat","fullWidth","margin","validationSchema","Yup","email","required","password","min","Register","formik","useFormik","initialValues","onSubmit","async","values","setSubmitting","setErrors","auth","getAuth","createUserWithEmailAndPassword","alert","code","submit","Container","component","maxWidth","children","_jsxs","Box","sx","marginTop","display","flexDirection","alignItems","Typography","variant","errors","color","handleSubmit","noValidate","mt","CustomInput","type","getFieldProps","touched","Button","mb","disabled","isSubmitting","tabIndex","CircularProgress","size"],"sourceRoot":""}